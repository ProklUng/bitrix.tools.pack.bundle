#########
# Twig.
#########

services:
  # конфигурация по умолчанию в *этом* файле
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  _instanceof:
    Twig\Extension\ExtensionInterface:
      tags: ['twig.extension']

  # Twig loader
  twig.loader:
    class: Twig\Loader\FilesystemLoader
    arguments:
      - '%twig_paths%'

  # Twig
  twig_service:
    class: Prokl\BitrixOrdinaryToolsBundle\Services\Twig\TwigService
    arguments:
      - '@twig.loader'
      - '%debug%'
      - '%twig_cache_dir%'
      - '%twig_config%'

  # Экземпляр Twig.
  twig.instance:
    class: Twig\Environment
    factory: ['@twig_service', 'instance']

  twig: '@twig.instance'

  # Template cache warmer
  Prokl\BitrixOrdinaryToolsBundle\Services\Twig\TemplateCacheWarmer:
    autoconfigure: false
    arguments:
      - '@twig.instance'
    class: Prokl\BitrixOrdinaryToolsBundle\Services\Twig\TemplateCacheWarmer
    tags: [kernel.cache_warmer]

  # Мигратор extensions в Твиг от maximaster.twig.tool.
  Prokl\BitrixOrdinaryToolsBundle\Services\Twig\TwigExtensionsBag:
    arguments:
      - !tagged_iterator twig.extension
    tags:
      - { name: bitrix.events.init, module: '', event: onAfterTwigTemplateEngineInited, method: handle, sort: 100 }

  # Мигратор runtimes в Твиг от maximaster.twig.tool.
  Prokl\BitrixOrdinaryToolsBundle\Services\Twig\TwigRuntimesBag:
    arguments:
      - !tagged_iterator twig.runtime
    tags:
      - { name: bitrix.events.init, module: '', event: onAfterTwigTemplateEngineInited, method: handle, sort: 100 }